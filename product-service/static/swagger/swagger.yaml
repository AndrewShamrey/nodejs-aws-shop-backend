openapi: 3.0.0
info:
  description: Product service API contracts
  version: 1.0.0
  title: Product Service
servers:
  - url: https://lrznfwuq7h.execute-api.eu-north-1.amazonaws.com
tags:
  - name: product-service
    description: Product API
paths:
  /products:
    post:
      x-lambda-name: createProduct
      tags:
        - product-service
      summary: Create new Product
      description: Create and return new product with provided data
      operationId: createProduct
      responses:
        '200':
          $ref: '#/components/responses/productSuccess'
        default:
          $ref: '#/components/responses/default'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestBodyProductCreate'
    get:
      x-lambda-name: getProductsList
      tags:
        - product-service
      summary: List products
      description: Get products list
      operationId: getProductsList
      responses:
        '200':
          $ref: '#/components/responses/productsListSuccess'
        default:
          $ref: '#/components/responses/default'
  '/products/{productId}':
    parameters:
      - $ref: '#/components/parameters/productId'
    get:
      x-lambda-name: getProductsById
      tags:
        - product-service
      summary: Product by id
      description: Get product details by its id
      operationId: getProductsById
      responses:
        '200':
          $ref: '#/components/responses/productSuccess'
        default:
          $ref: '#/components/responses/default'
components:
  parameters:
    productId:
      name: productId
      in: path
      schema:
        type: string
      required: true
      description: Product id
      example: 48b21827-7476-44ab-ba71-0c49401f8495
  responses:
    productSuccess:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FullProduct'
    productsListSuccess:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseBodyProductsList'
    default:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseBodyError'
  schemas:
    Text:
      example: Very long text
      type: string
    UUID:
      example: 48b21827-7476-44ab-ba71-0c49401f8495
      type: string
    Product:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        title:
          example: Product title
          type: string
        price:
          example: 300
          type: number
        description:
          $ref: '#/components/schemas/Text'
      additionalProperties: false
      required:
        - id
        - title
        - price
    Stock:
      type: object
      properties:
        product_id:
          $ref: '#/components/schemas/UUID'
        count:
          example: 20
          type: number
      additionalProperties: false
      required:
        - product_id
        - count
    FullProduct:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        title:
          example: Product title
          type: string
        price:
          example: 300
          type: number
        count:
          example: 20
          type: number
        description:
          $ref: '#/components/schemas/Text'
      additionalProperties: false
      required:
        - id
        - title
        - price
        - count
    RequestBodyProductCreate:
      type: object
      properties:
        title:
          example: Product title
          type: string
        price:
          example: 300
          type: number
        count:
          example: 20
          type: number
        description:
          $ref: '#/components/schemas/Text'
      additionalProperties: false
      required:
        - title
        - price
        - count
    ResponseBodyProductsList:
      type: array
      items:
        $ref: '#/components/schemas/FullProduct'
    ResponseBodyError:
      type: object
      properties:
        statusCode:
          example: 400
          type: number
        message:
          example: Invalid request
          type: string
        code:
          example: BadRequestError
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              code:
                example: BadRequestError
                type: string
              message:
                example: Invalid request
                type: string
            additionalProperties: false
            required:
              - code
              - message
        details:
          example:
            validation: id field is missing
      additionalProperties: false
      required:
        - code
        - errors
        - message
        - statusCode
